openapi: "3.1.0"
info:
  title: "LibApp API"
  description: "LibApp API"
  version: "1.0.0"
servers:
  - url: "https://localhost:8080"
tags:
  - name: "Author"
    description: "Add author, get authors (pagination), get author by id"
  - name: "Book"
    description: "Add book, get books list, get book by id, update book info, delete book"
paths:
  /authors:
    post:
      tags: ["Author"]
      summary: "POST authors"
      operationId: "AddAuthor"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      tags: ["Author"]
      summary: "GET authors"
      operationId: "GetAuthors"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthorModel"
  /authors/{id}:
    get:
      tags: ["Author"]
      summary: "GET authors/{id}"
      operationId: "GetAuthorById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthorModel"
  /books:
    post:
      tags: ["Book"]
      summary: "POST books"
      operationId: "AddBook"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    get:
      tags: ["Book"]
      summary: "GET books"
      operationId: "GetBooks"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BookModel"
  /books/{id}:
    get:
      tags: ["Book"]
      summary: "GET books/{id}"
      operationId: "GetBookInfo"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookModel"
    put:
      tags: ["Book"]
      summary: "PUT books/{id}"
      operationId: "UpdateBook"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BookModel"
    delete:
      tags: ["Book"]
      summary: "DELETE books/{id}"
      operationId: "DeleteBook"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    AuthorDTO:
      type: "object"
      properties:
        name:
          type: "string"
          nullable: true
        birth_year:
          type: "integer"
          format: "int32"
          nullable: true
    AuthorModel:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          nullable: true
        name:
          type: "string"
          nullable: true
        birth_year:
          type: "integer"
          format: "int32"
          nullable: true
    BookDTO:
      type: "object"
      properties:
        title:
          type: "string"
          nullable: true
        author_id:
          type: "integer"
          format: "int64"
          nullable: true
        year:
          type: "integer"
          format: "int32"
          nullable: true
        genre:
          type: "string"
          nullable: true
    BookModel:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          nullable: true
        title:
          type: "string"
          nullable: true
        author_id:
          type: "integer"
          format: "int64"
          nullable: true
        year:
          type: "integer"
          format: "int32"
          nullable: true
        genre:
          type: "string"
          nullable: true